{"version":3,"sources":["components/Forms/Input/Input.js","lib/localStorage.js","components/Forms/useForm.js","components/validations/isEmpty.js","components/validations/minLength.js","components/Forms/SignInForm.js","pages/Signin/Signin.js","components/validations/email.js","components/validations/passStrength.js","components/validations/minMaxLength.js","components/validations/username.js","components/validations/date.js","components/Forms/SignUpForm.js","pages/SignUp/SignUp.js","components/Nav/Nav.js","App.js","serviceWorker.js","index.js"],"names":["Input","users","auth","props","Form","Group","className","Label","label","Control","key","id","type","name","placeholder","value","onChange","changed","Text","validationMesssage","checkUserBase","localStorage","hasOwnProperty","JSON","parse","stringify","authCheck","sessionStorage","status","userLogout","user","useForm","formValues","validations","handleUserLogin","useState","values","setValues","errors","setErrors","inputChangeHandler","event","target","submitHandler","preventDefault","finalErrors","Object","entries","enableLogIn","keys","length","userName","password","surname","birthDate","email","phone","console","log","push","userAdd","userLogin","isEmpty","minLengthError","SignInForm","minLength","onSubmit","noValidate","Button","variant","Login","validateEmail","message","test","String","toLowerCase","passStrength","minMaxLengthError","usernameValid","symbolMessage","lengthMessage","dateValid","date","parseDate","split","map","item","parseInt","a","Date","d","getFullYear","getMonth","getDate","SignUpForm","passwordConfirm","Registration","HeaderNav","React","userStatus","changeUserStatus","signedOutNav","path","linkText","component","Signin","exact","Signup","signedInNav","MyLists","onclick","nav","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","navItem","i","Link","href","onClick","htmlFor","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.33721285.chunk.js","sourcesContent":["import React from 'react';\nimport Form from 'react-bootstrap/Form';\n\nfunction Input(props) {\n    return (\n        <Form.Group className=\"mb-2\">\n            <Form.Label>{props.label}</Form.Label>\n            <Form.Control \n                key = {props.id}\n                type = {props.type}\n                name = {props.name} \n                id = {props.id}\n                placeholder = {props.placeholder}\n                label = {props.label}\n                value = {props.value}\n                onChange = {props.changed}\n            />\n            <Form.Text className=\"validation-message text-danger\">\n                {props.validationMesssage}\n            </Form.Text>\n        </Form.Group>\n    )\n}\n\nexport default Input;\n\n","let users;\nlet auth;\n\nfunction checkUserBase(){\n  if(localStorage.hasOwnProperty(\"users\")){\n      users = JSON.parse(localStorage.users);\n  } else {\n      users = [];\n      localStorage.users = JSON.stringify(users);\n  }\n}\n\n\nfunction authCheck(){\n  if(sessionStorage.hasOwnProperty(\"auth\")){\n    auth = JSON.parse(sessionStorage.auth);\n  } else {\n    auth = {\n      status: false\n    };\n    sessionStorage.auth = JSON.stringify(auth);\n  }\n}\n\n\n\nfunction userAdd({userName,password,name,surname,birthDate,email,phone}) {\n  checkUserBase();\n  authCheck();\n\n  for (let user of JSON.parse(localStorage.users)) {\n    if(userName === user.userName) {\n      console.log('username already exists');\n      return false;\n    } \n  }\n  users.push({\n    phone,\n    userName,\n    password,\n    birthDate,\n    name,\n    surname,\n    email\n  });\n  localStorage.users = JSON.stringify(users);\n  auth.status = true;\n  auth.user = userName;\n  sessionStorage.auth = JSON.stringify(auth);\n  console.log(`${userName} added successfully!`);\n  return true;\n}\n\nfunction userLogin(userName, password) {\n  checkUserBase();\n  authCheck();\n  \n  for (let user of JSON.parse(localStorage.users)) {\n    if(userName === user.userName && password === user.password) {\n      auth.status = true;\n      auth.user = userName;\n      sessionStorage.auth = JSON.stringify(auth);\n      console.log(`Welcome, ${userName}!`);\n      return true;\n    }\n  }\n  console.log('User does not exist or something went wrong');\n  return false;\n}\n\nfunction userRemove(userName, password) {\n  checkUserBase();\n  authCheck();\n    localStorage.users = JSON.stringify(JSON.parse(localStorage.users).filter(user => {\n      return !(userName === user.userName && password === user.password)\n    }))\n  auth.status = false;\n  sessionStorage.auth = JSON.stringify(auth);\n  checkUserBase();\n  console.log(`${userName} removed successfully`);\n}\n\nfunction userLogout() {\n  checkUserBase();\n  authCheck();\n  auth.status = false;\n  auth.user = null;\n  sessionStorage.auth = JSON.stringify(auth);\n}\n\n\nexport {\n  userLogin,\n  userLogout,\n  userAdd,\n  userRemove,\n  authCheck\n}","import {useState} from 'react';\nimport {userLogin, userAdd} from '../../lib/localStorage';\n\nconst useForm = (formValues, validations, handleUserLogin)  => {\n    const [values, setValues] = useState(formValues);\n    const [errors, setErrors] = useState(formValues);\n\n    function inputChangeHandler (event) {\n        setValues({\n            ...values, \n            [event.target.name]: event.target.value \n        });\n        setErrors({\n            ...errors,\n            [event.target.name]: validations[event.target.name](event.target.value)\n        })\n    }\n\n    function submitHandler (event){\n        event.preventDefault();\n\n        let finalErrors = {};\n\n        for (let [key, value] of Object.entries(values)) {\n            if (errors!== true) {\n                finalErrors[key] = validations[key](value)\n            }\n        }\n\n        setErrors(finalErrors);\n\n        let enableLogIn = true;\n        for (let error of Object.values(errors)) {\n            if (error !== true) {\n                enableLogIn = false;\n                return;\n            }\n        }\n        if (enableLogIn === true) {\n            if (Object.keys(values).length > 2) {\n                userAdd(values);\n            }\n            else {\n                userLogin(values.userName, values.password);\n            }\n            handleUserLogin();\n        }\n    };\n\n    return{\n        inputChangeHandler,\n        submitHandler,\n        values,\n        errors\n    }\n}\n\nexport default useForm;","// function isEmptyError(value, params) {\n//     const {\n//         message = 'Please fill this field'\n//     } = params;\n\n//     if (!value) {\n//         return null;\n//     }\n//     return message;\n// }\n\n// export default isEmptyError;\n\nfunction isEmpty(value) {\n    let message = 'Please fill in this field';\n    if(!value){\n        return message\n    }\n    return true;\n}\n\nexport default isEmpty;\n","// function minLengthError(value, params) {\n//     const {\n//         minLength = 8,\n//         message = 'Error in length validation'\n//     } = params;\n\n//     if (value == null || value.length < minLength) {\n//         return message;\n//     }\n\n//     return null;\n// }\n\n// export default minLengthError;\n\nfunction minLengthError(value) {\n    const minLength = 8;\n    const message = 'Passwords is at least 8 characters long';\n    \n    if (!value || value.length < minLength) {\n        return message;\n    }\n\n    return true;\n}\n\nexport default minLengthError;","import React from 'react';\nimport Input from './Input/Input';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport useForm from './useForm';\nimport isEmpty from '../validations/isEmpty';\nimport minLength from '../validations/minLength';\n\nfunction SignInForm (props) {\n    const formValues = {\n        userName: '',\n        password: ''\n    }\n\n    const formValidations = {\n        userName: isEmpty,\n        password: minLength\n    }\n\n    const {\n        inputChangeHandler,\n        submitHandler,\n        values,\n        errors\n    } = useForm(formValues, formValidations, props.handleUserLogin);\n\n    return (\n        <Form className=\"main-form\" onSubmit={submitHandler} noValidate>\n            <div className = \"col-sm-8 col-md-6 col-lg-4 m-auto\">\n                <Input\n                    type=\"text\"\n                    name=\"userName\"\n                    placeholder=\"User name\"\n                    label=\"User name\"\n                    value={values.userName}\n                    validationMesssage={errors.userName}\n                    changed={inputChangeHandler}\n                >\n                </Input>\n            </div>\n            <div className = \"col-sm-8 col-md-6 col-lg-4 m-auto\">\n                <Input\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Password\"\n                    label=\"Password\"\n                    value={values.password}\n                    validationMesssage={errors.password}\n                    changed={inputChangeHandler}\n                >\n                </Input>\n            </div>\n\n            <Button\n                className=\"d-block mr-auto ml-auto mt-3 px-5\"\n                variant=\"primary\"\n                type=\"submit\"\n                onSubmit={submitHandler}>\n                Submit\n            </Button>\n        </Form>\n    )\n}\n\nexport default SignInForm;","import React from 'react';\n// import MainForm from '../../components/MainForm/MainForm';\nimport SignInForm from '../../components/Forms/SignInForm';\n\n\nfunction Login(props) {\n    return (\n        <main className=\"d-flex align-items-center\">\n            <div className=\"form-wrapper container pb-5 mb-5\">\n                <div className=\"title text-center\">\n                    <h2>Please sign in</h2>\n                    <p>Signin to manage your account.</p>\n                </div>\n                <SignInForm handleUserLogin={props.handleUserLogin}></SignInForm>\n            </div>\n        </main>\n    )\n}\n\nexport default Login;","import React from 'react';\nfunction validateEmail(email) {\n    const message = <p>Please enter a <strong>valid</strong> E-mail address</p>;\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if(re.test(String(email).toLowerCase())) {\n        return true;\n    }\n    return message;\n}\n\nexport default validateEmail;\n\n","import React from 'react';\n\nfunction passStrength(password) {\n    const message = ( \n    <div>\n        <strong>Password must contain:</strong> \n        <ul>\n         <li>Upper/Lower case Latin symbols</li>\n         <li>Numbers</li>\n         <li>One of this symbols: !#$%&? </li>\n        </ul>\n    </div> );\n    const regex = /^.*(?=.{8,})(?=.*[a-zA-Z])(?=.*\\d)(?=.*[!#$%&? \"]).*$/;\n    if (regex.test(password)) {\n        return true;\n    }\n    else return message;\n}\n\nexport default passStrength;","import React from 'react';\nfunction minMaxLengthError(value) {\n    const maxLength = 200;\n    const minLength = 2;\n    const message = <p><strong>Name/Surname</strong> must be between 2 and 200 characters long</p>;\n    \n    if (!value || value.length < minLength || value.length > maxLength) {\n        return message;\n    }\n\n    return true;\n}\n\nexport default minMaxLengthError;","import React from 'react';\nfunction usernameValid(value) {\n    const symbolMessage = (\n        <div>\n          Username must contain <strong>Only Latin symbols</strong> and <strong>Numbers</strong>\n        </div>        \n      );\n    const regex = /[^a-zA-Z0-9]/;\n    const maxLength = 200;\n    const minLength = 2;\n    const lengthMessage = <p>Username must be between 2 and 200 characters long</p>;\n    \n    if (regex.test(value)) {\n      return symbolMessage ;\n  }\n\n    if (!value || value.length < minLength || value.length > maxLength) {\n        return lengthMessage;\n    }\n     else return true;\n  \n   \n}\n\nexport default usernameValid;","import React from 'react';\nfunction dateValid(date) {\n    const message = (\n        <div>\n          You must be at least <strong>18 years</strong> old\n        </div>        \n      );\n\n      var parseDate = date.split('-').map((item) => parseInt(item, 10));\n      var a= new Date([parseDate]);\n      var d = new Date();\n      var m=(d.getFullYear()-a.getFullYear())*100000+(d.getMonth()-a.getMonth())*100+(d.getDate()-a.getDate());\n\n      if (m >= 1800000) {\n        return true;\n      }\n      else return message;   \n}\n\nexport default dateValid;","import React from 'react';\nimport Input from './Input/Input';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport useForm from './useForm';\nimport isEmpty from '../validations/isEmpty';\nimport validateEmail from '../validations/email';\nimport passStrength from '../validations/passStrength';\nimport minMaxLengthError from '../validations/minMaxLength';\nimport usernameValid from '../validations/username';\nimport confPassword from '../validations/confPassword';\nimport dateValid from '../validations/date';\n\nfunction SignUpForm (props) {\n    const formValues = {\n        userName: '',\n        name: '',\n        surname: '',\n        birthDate: '',\n        email: '',\n        phone: '',\n        password: '',\n        passwordConfirm: ''\n    }\n\n    const formValidations = {\n        userName: usernameValid,\n        name: minMaxLengthError,\n        surname: minMaxLengthError,\n        birthDate: dateValid,\n        email: validateEmail,\n        phone: isEmpty,\n        password: passStrength,\n        passwordConfirm: isEmpty\n    }\n\n    const {\n        inputChangeHandler,\n        submitHandler,\n        values,\n        errors\n    } = useForm(formValues, formValidations, props.handleUserLogin);\n\n\n    return (\n        <Form className=\"main-form\"  onSubmit={submitHandler} noValidate>\n            <div className=\"row\">\n                <div className=\"col-sm-6 col-lg-4 offset-lg-2\">\n                    <Input \n                        type=\"text\"\n                        name=\"userName\" \n                        placeholder=\"User name\" \n                        label=\"User name\"\n                        value={values.userName}\n                        validationMesssage={errors.userName}\n                        changed={inputChangeHandler}\n                    >\n                    </Input>\n                </div>\n                <div className=\"col-sm-6 col-lg-4\">\n                    <Input \n                        type=\"email\"\n                        name=\"email\" \n                        placeholder=\"Email\" \n                        label=\"Email\"\n                        value={values.email}\n                        validationMesssage={errors.email}\n                        changed={inputChangeHandler}\n                    >\n                    </Input>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-sm-6 col-lg-4 offset-lg-2\">\n                    <Input \n                        type=\"text\"\n                        name=\"name\" \n                        placeholder=\"First name\" \n                        label=\"Name\"\n                        value={values.name}\n                        validationMesssage={errors.name}\n                        changed={inputChangeHandler}\n                    >\n                    </Input>\n                </div>\n                <div className=\"col-sm-6 col-lg-4\">\n                    <Input \n                        type=\"text\"\n                        name=\"surname\" \n                        placeholder=\"Last name\" \n                        label=\"Surname\"\n                        value={values.surname}\n                        validationMesssage={errors.surname}\n                        changed={inputChangeHandler}\n                    >\n                    </Input>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-sm-6 col-lg-4 offset-lg-2\">\n                    <Input \n                        type=\"date\"\n                        name=\"birthDate\" \n                        placeholder=\"Birth Date\" \n                        label=\"Birth Date\"\n                        value={values.birthDate}\n                        validationMesssage={errors.birthDate}\n                        changed={inputChangeHandler}\n                    >\n                    </Input>\n                </div>\n                <div className=\"col-sm-6 col-lg-4\">\n                    <Input \n                        type=\"number\"\n                        name=\"phone\" \n                        placeholder=\"Mobile phone\" \n                        label=\"Phone number\"\n                        value={values.phone}\n                        validationMesssage={errors.phone}\n                        changed={inputChangeHandler}\n                    >\n                    </Input>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-sm-6 col-lg-4 offset-lg-2\">\n                    <Input \n                        type=\"password\" \n                        name=\"password\"\n                        placeholder=\"Password\" \n                        label=\"Password\"\n                        value={values.password}\n                        validationMesssage={errors.password}\n                        changed={inputChangeHandler}\n                    >\n                    </Input>\n                </div>\n                <div className=\"col-sm-6 col-lg-4\">\n                    <Input \n                        type=\"password\" \n                        name=\"passwordConfirm\"\n                        placeholder=\"Confirm password\" \n                        label=\"Confirm password\"\n                        value={values.passwordConfirm}\n                        validationMesssage={errors.passwordConfirm}\n                        changed={inputChangeHandler}\n                    >\n                    </Input>\n                </div>\n            </div>\n\n            <Button \n                className=\"d-block mr-auto ml-auto mt-3 px-5\" \n                variant=\"primary\"   \n                type=\"submit\"\n                onSubmit={submitHandler}>\n                Submit\n            </Button>\n        </Form>\n    )\n}\n\nexport default SignUpForm;","import React from 'react';\n// import MainForm from '../../components/MainForm/MainForm';\nimport SignUpForm from '../../components/Forms/SignUpForm';\n\nfunction Registration(props) {\n    return (\n        <main className=\"d-flex align-items-center\">\n            <div className=\"form-wrapper container pb-5 mb-5\">\n                <div className=\"title text-center\">\n                    <h2>Please sign up</h2>\n                    <p>Fill out the form to get started.</p>\n                </div>\n                <SignUpForm handleUserLogin={props.handleUserLogin}></SignUpForm>\n            </div>\n        </main>\n    )\n}\n\nexport default Registration;","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport Signin from '../../pages/Signin/Signin';\nimport Signup from '../../pages/SignUp/SignUp';\nimport {authCheck, userLogout} from '../../lib/localStorage';\n\nexport default function HeaderNav() {\n    authCheck();\n    let [userStatus, changeUserStatus] = React.useState(JSON.parse(sessionStorage.auth).status);\n    function handleUserLogin() {\n        changeUserStatus(JSON.parse(sessionStorage.auth).status);\n    }\n    const signedOutNav = [\n        {\n            path: \"/\",\n            linkText: \"Sign in\",\n            component: Signin,\n            exact: true\n        },\n        {\n            path: \"/signup\",\n            linkText: \"Sign up\",\n            component: Signup\n        }\n    ]\n\n    const signedInNav = [\n        {\n            path: \"/\",\n            linkText: \"My lists\",\n            component: MyLists,\n            exact: true\n        },\n        {\n            path: \"/\",\n            linkText: `Log out, ${JSON.parse(sessionStorage.auth).user}`,\n            component: MyLists,\n            onclick: userLogout\n        }\n    ]\n\n    let nav = userStatus ? signedInNav : signedOutNav;\n\n    return (\n        <Router>\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Navbar.Brand>Logo</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"ml-auto\">\n                        {nav.map((navItem, i) => (\n                            <Nav.Link key={i} href={navItem.path} onClick={navItem.onclick}>\n                                {navItem.linkText}\n                            </Nav.Link>\n                        ))} \n                    </Nav>\n\n                    <div className=\"custom-control custom-switch ml-4\">\n                        <input type=\"checkbox\" className=\"custom-control-input\" id=\"customSwitches\"></input>\n                        <label className=\"custom-control-label\" htmlFor=\"customSwitches\">Switch mode</label>\n                    </div>\n                </Navbar.Collapse>\n            </Navbar>\n\n            <Switch>\n                {nav.map((navItem, i) => (\n                    <Route key={i} path={navItem.path} exact={navItem.exact}>\n                        <navItem.component handleUserLogin={handleUserLogin} />\n                    </Route>\n                ))}\n            </Switch>\n        </Router>\n    );\n}\n\n\n\n\n\nfunction LogOut() {\n    return (\n        <h1>Log Out</h1>\n    )\n}\n\nfunction MyLists() {\n    return (\n        <h1>MyLists</h1>\n    )\n}\n\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport HeaderNav from './components/Nav/Nav';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HeaderNav></HeaderNav>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}